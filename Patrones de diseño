üî¥ MODULO 1: Patrones de dise√±o

‚úÖ Clase 1: Bienvenida
‚û°Ô∏è Introducci√≥n a la materia
‚û°Ô∏è Pruebas unitarias con JUnit
‚û°Ô∏è Introducci√≥n: Test unitarios vs. Test integraci√≥n
‚û°Ô∏è Beneficios y principio FIRST
‚û°Ô∏è Arquitectura JUnit
‚û°Ô∏è Configuraci√≥n de la librer√≠a
‚û°Ô∏è Anotaciones, assertions
‚û°Ô∏è Testeo parametrizado
‚û°Ô∏è Suite, Suite de Suites
‚û°Ô∏è Ejemplo en Java

‚úÖ Clase 2: Patr√≥n template method
‚û°Ô∏è Template method
‚û°Ô∏è Presentaci√≥n en UML
‚û°Ô∏è Ejemplo
‚û°Ô∏è Implementaci√≥n t√≠pica en Java

‚úÖ Clase 3: Integradora

‚úÖ Clase 4: Patr√≥n cadena de responsabilidad
‚û°Ô∏è Cadena de responsabilidad
‚û°Ô∏è Presentaci√≥n en UML
‚û°Ô∏è Ejemplo
‚û°Ô∏è Implementaci√≥n t√≠pica en Java

‚úÖ Clase 5: Patr√≥n proxy
‚û°Ô∏è Patr√≥n proxy
‚û°Ô∏è Presentaci√≥n en UML
‚û°Ô∏è Ejemplo
‚û°Ô∏è Implementaci√≥n t√≠pica en Java

‚úÖ Clase 6: Integradora

‚úÖ Clase 7: Patr√≥n flyweight 
‚û°Ô∏è Patr√≥n flyweight
‚û°Ô∏è Presentaci√≥n en UML
‚û°Ô∏è Ejemplo
‚û°Ô∏è Implementaci√≥n t√≠pica en Java

‚úÖ Clase 8: Patr√≥n facade
‚û°Ô∏è Patr√≥n Facade
‚û°Ô∏è Presentaci√≥n en UML.
‚û°Ô∏è Ejemplo
‚û°Ô∏è Implementaci√≥n t√≠pica en Java

‚úÖ Clase 9: Integradora
